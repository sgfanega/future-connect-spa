@use 'colors';
@use 'variables';

$test: colors.$primary-color;

$custom-theme-colors : (
  "primary": colors.$primary-color,
);

$custom-theme-bg-colors : (
  "primary": colors.$body-primary-color,
  "secondary": colors.$body-secondary-color,
  "tertiary": colors.$body-tertiary-color
);

$custom-theme-text-colors: (
  "primary": colors.$text-primary-color,
  "secondary": colors.$text-secondary-color,
  "tertiary": colors.$text-tertiary-color
);

$theme-colors: map-merge($theme-colors, $custom-theme-colors);
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");

$utilities: map-merge(
  $utilities, (
    "background-body-color": (
      property: background-color,
      class: bg-body,
      values: $custom-theme-bg-colors
    ),
    "background-color": (
      property: background-color,
      class: bg,
      values: $custom-theme-colors
    ),
    "color": (
      property: color,
      class: text,
      local-vars: (
        "text-opacity": 1
      ),
      values: $custom-theme-text-colors
    )
  )
);

// Theme Color
